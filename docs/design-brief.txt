# Chatter Language School Management Platform - Design Brief

**Main Goal**: Architecting a dynamic, configurable language school management platform with integrated messaging, CRM, and bookkeeping systems optimized for React/Firebase development.

---

## Feature 1: Firebase Authentication System

### Screen 1: Login Screen

### Screen 1 State 1: Initial Load

- **Layout**: Centered authentication card (400px width) on light gray background with subtle gradient
- **Header**: Chatter logo (rounded square, brand purple) with "Welcome to Chatter" heading and "Your team's central communication hub" subtitle
- **Form Elements**:
    - Email input field with placeholder "[name@company.com](mailto:name@company.com)" and floating label animation
    - Password input with masked characters and show/hide toggle icon
    - "Remember me" checkbox with custom styling
    - "Forgot password?" link in brand purple, right-aligned
- **Primary Action**: Full-width "Sign In" button with gradient background, 8px border radius, disabled state until form validation passes
- **Secondary Action**: "Don't have an account? Contact your admin" text link
- **Animations**:
    - Subtle fade-in on component mount (300ms ease-out)
    - Form field focus states with border color transition and label float animation
    - Button hover state with slight scale transform (1.02x) and shadow elevation

### Screen 1 State 2: Form Validation Active

- **Real-time validation**: Email format validation with inline error messages below fields
- **Password requirements**: Minimum 8 characters with strength indicator
- **Error states**: Red border on invalid fields with shake animation on submission attempt
- **Button state**: Primary button remains disabled with 60% opacity until all validations pass
- **Accessibility**: Error messages announced by screen readers, proper ARIA labels

### Screen 1 State 3: Loading State

- **Button transformation**: "Sign In" text replaced with spinning loader (20px) maintaining button dimensions
- **Form disabled**: All inputs disabled with subtle opacity reduction
- **Background dimming**: Optional overlay to prevent interaction during authentication
- **Timeout handling**: Error state after 10 seconds with retry option

### Screen 1 State 4: Authentication Error

- **Error display**: Red alert banner above form with specific error message
- **Error types**: "Invalid credentials", "Account locked", "Network error" with appropriate icons
- **Recovery actions**: "Try again" or "Reset password" based on error type
- **Animation**: Alert slides down from top with bounce effect

### Screen 2: Forgot Password Modal

### Screen 2 State 1: Email Input

- **Modal overlay**: Semi-transparent background (rgba(0,0,0,0.5)) with centered modal
- **Modal content**: White card with email input and explanatory text
- **Copy**: "Enter your email address and we'll send you a link to reset your password"
- **Actions**: "Send Reset Link" primary button and "Cancel" text button
- **Close**: X icon in top-right corner with hover animation

### Screen 2 State 2: Success Confirmation

- **Content replacement**: Check icon with success message
- **Copy**: "Reset link sent! Check your email and follow the instructions"
- **Action**: Single "Close" button
- **Auto-close**: Modal dismisses after 3 seconds with countdown timer

### Firebase Integration Points

```jsx

javascript
// Authentication flow with error handling
const signIn = async (email, password) => {
  try {
    await signInWithEmailAndPassword(auth, email, password);
// Redirect to role onboarding check
  } catch (error) {
// Handle specific error codes
  }
};

```

---

## Feature 2: Role-Based Onboarding Flow

### Screen 1: Role Selection Modal

### Screen 1 State 1: Initial Presentation

- **Modal behavior**: Fullscreen overlay, non-dismissible (no X button or outside click)
- **Header**: "Welcome! Let's set up your account" with progress indicator (Step 1 of 2)
- **Content layout**: Grid of role cards (2 columns on desktop, 1 on mobile)
- **Role cards**:
    - Each card 200px height with icon, role name, and description
    - Available roles: Teacher, Accountant, Customer Support, Manager, Visa Support, Social Media, Custom
    - Hover states with subtle elevation and border color change
    - Multi-select capability with checkmark overlay on selection
- **Requirement text**: "Select all roles that apply to you (minimum 1 required)"
- **Primary action**: "Continue" button, disabled until at least one role selected

### Screen 1 State 2: Role Selected

- **Visual feedback**: Selected cards show purple border and checkmark icon overlay
- **Button activation**: "Continue" button becomes active with hover/focus states
- **Validation**: Real-time count of selected roles with "X roles selected" text
- **Custom role**: If "Custom" selected, additional text input appears for role specification

### Screen 1 State 3: Custom Role Input

- **Conditional field**: Text input with placeholder "Enter your custom role"
- **Validation**: Required if Custom role is selected, character limit 50
- **Helper text**: "This will be visible to other team members"

### Screen 2: Profile Completion

### Screen 2 State 1: Profile Information

- **Progress**: Step 2 of 2 in header
- **Form fields**:
    - Full name (required)
    - Profile photo upload (optional) with drag-drop zone
    - Department/Team (dropdown with common options + Other)
    - Bio/Description (optional, 200 character limit)
- **Preview card**: Live preview of profile as other users will see it
- **Actions**: "Back" secondary button and "Complete Setup" primary button

### Screen 2 State 2: Photo Upload Active

- **Upload zone**: Dotted border area with upload icon and "Drop photo here or click to browse"
- **File validation**: JPG/PNG only, max 5MB with progress bar during upload
- **Preview**: Circular crop preview with zoom/position controls
- **Remove option**: Small X button on uploaded photo to remove and reselect

### Screen 2 State 3: Setup Complete

- **Success animation**: Checkmark with scale-in animation
- **Message**: "Welcome to Chatter! Redirecting to your workspace..."
- **Auto-redirect**: 2-second delay before navigating to main application
- **Loading indicator**: Subtle spinner during Firestore role update

### Firestore Integration

```jsx

javascript
// Role assignment and profile creation
const completeOnboarding = async (roles, profile) => {
  const userDoc = doc(db, 'users', user.uid);
  await updateDoc(userDoc, {
    roles: roles,
    profile: profile,
    onboardingCompleted: true,
    completedAt: serverTimestamp()
  });
};

```

---

## Feature 3: Three-Section Navigation System

### Screen 1: Main Application Layout

### Screen 1 State 1: Default Chat Section Active

- **Layout structure**:
    - Left sidebar (280px width) with three main sections
    - Main content area taking remaining width
    - Collapsible sidebar for mobile/tablet breakpoints
- **Sidebar navigation**:
    - App logo and workspace name at top
    - Three primary sections: Chat, CRM, Bookkeeping as large nav items
    - Each section has distinct icon and active state styling
    - Role-based visibility (some users may not see all sections)
- **Active state**: Chat section highlighted with purple background and white text
- **Section content**: Chat section shows channel list, direct messages, etc.

### Screen 1 State 2: CRM Section Active

- **Navigation transition**: Smooth transition animation (200ms ease-in-out) between sections
- **Content replacement**: Main area updates to show CRM interface
- **Breadcrumb**: "CRM" with current view (Customers, Leads, etc.)
- **State persistence**: Previous chat state maintained when returning
- **URL update**: Route changes to `/crm` with proper browser history

### Screen 1 State 3: Bookkeeping Section Active

- **Similar transition**: Consistent animation and state management
- **Content area**: Bookkeeping dashboard with financial overview
- **Route**: `/bookkeeping` with nested routes for different views
- **Quick actions**: Section-specific action buttons in header area

### Screen 1 State 4: Mobile Responsive

- **Sidebar behavior**: Transforms to slide-out overlay on mobile
- **Navigation**: Bottom tab bar for section switching on mobile
- **Touch gestures**: Swipe between sections on mobile
- **Hamburger menu**: Top-left menu button to open sidebar overlay

### Screen 2: Section Header Component

### Screen 2 State 1: Standard Header Layout

- **Breadcrumb navigation**: Current section > subsection > current view
- **Search functionality**: Global search bar with section-specific filtering
- **User profile**: Avatar dropdown in top-right with profile options
- **Quick actions**: Section-specific action buttons (+ New Channel, + Customer, etc.)
- **Notifications**: Bell icon with unread count badge

### Screen 2 State 2: Search Active

- **Search expansion**: Search bar expands on focus with overlay suggestions
- **Recent searches**: Dropdown showing recent search terms
- **Quick filters**: Section-specific filter chips below search
- **Keyboard navigation**: Arrow keys for suggestion navigation, Enter to select

### React Router Structure

```jsx

javascript
// Nested routing for sections
<Routes>
  <Route path="/chat/*" element={<ChatSection />} />
  <Route path="/crm/*" element={<CRMSection />} />
  <Route path="/bookkeeping/*" element={<BookkeepingSection />} />
  <Route path="/" element={<Navigate to="/chat" />} />
</Routes>

```

---

## Feature 4: Dynamic Channel Type System

### Screen 1: Admin Channel Types Management

### Screen 1 State 1: Channel Types Overview

- **Access control**: Only visible to admin roles, 404 for non-admins
- **Layout**: Table view of existing channel types with cards for quick overview
- **Type cards**: Display type name, description, tab count, and usage statistics
- **Actions per type**: Edit, Duplicate, Delete with confirmation modals
- **Primary action**: "+ Create Channel Type" button with prominent styling
- **Filter/search**: Search existing types, filter by creation date or usage

### Screen 1 State 2: Create New Type Modal

- **Multi-step modal**: Step indicator showing progress through creation
- **Step 1 - Basic Info**:
    - Type name (required, unique validation)
    - Description (required, 200 character limit)
    - Icon selection from predefined set
    - Color theme picker for channel styling
- **Validation**: Real-time validation with error messaging
- **Navigation**: Previous/Next buttons with step validation

### Screen 1 State 3: Tab Configuration Step

- **Tab builder interface**: Drag-and-drop tab creation
- **Available tab types**: Messages (required), Tasks, Wiki, Bookmarks, Student Table, Schedule, Custom
- **Tab configuration**: Each tab type has specific configuration options
- **Preview pane**: Live preview of how tabs will appear in channels
- **Required tabs**: Some tabs marked as required and cannot be removed

### Screen 1 State 4: Permissions & Rules

- **Role-based permissions**: Matrix of roles vs. permissions (read, write, admin)
- **Channel creation rules**: Who can create channels of this type
- **Member management**: Who can add/remove members
- **Content moderation**: Who can delete messages, moderate discussions
- **Save options**: Save as draft or publish immediately

### Screen 2: Channel Type in Use

### Screen 2 State 1: Type Selection During Channel Creation

- **Type picker**: Grid of available channel types with descriptions
- **Preview**: Hover state shows tab configuration and features
- **Filtering**: Filter types by category or search by name
- **Selection**: Click to select type and proceed to channel creation
- **Information**: Clear explanation of what each type includes

### Screen 2 State 2: Type-Based Channel Interface

- **Tab rendering**: Dynamic tab creation based on type configuration
- **Custom styling**: Channel colors and icons from type configuration
- **Conditional features**: Features appear/disappear based on type settings
- **Migration support**: Ability to change channel type with data migration

### Firestore Schema

```jsx

javascript
// Channel type document structure
{
  id: "class_channel",
  name: "Class Channel",
  description: "For managing language classes",
  icon: "school",
  colorTheme: "purple",
  defaultTabs: [
    {
      id: "messages",
      name: "Messages",
      type: "messaging",
      required: true
    },
    {
      id: "students",
      name: "Students",
      type: "student_table",
      config: { allowSubCourses: true }
    }
  ],
  permissions: {
    teacher: ["read", "write", "moderate"],
    student: ["read", "write"]
  },
  createdBy: "adminUserId",
  createdAt: timestamp,
  usage: { channelCount: 15, lastUsed: timestamp }
}

```

---

## Feature 5: Enhanced Class Channel Onboarding

### Screen 1: Channel Creation Wizard

### Screen 1 State 1: Type & Basic Info

- **Channel type selection**: Pre-filtered to "Class Channel" if accessed from class creation flow
- **Basic information**:
    - Channel name (auto-generated from class info, editable)
    - Class type selection: G/A/P/M with explanatory tooltips
    - Privacy setting: Public/Private with member implications
- **Progress indicator**: Step 1 of 5 with completion percentage
- **Form validation**: Real-time validation with helpful error messages

### Screen 1 State 2: Class Configuration

- **Class type specific options**:
    - G/A types: Sub-course configuration (A1.1, A1.2, etc.)
    - P/M types: Single course tracking
    - Level selection: A1-C2 with descriptions
- **Sub-course management**: Dynamic addition/removal of sub-course levels
- **Course materials**: Optional attachment of curriculum files
- **Capacity settings**: Max students per class/sub-course

### Screen 2: Teacher Assignment

### Screen 2 State 1: Teacher Selection

- **Teacher search**: Search existing teachers by name or email
- **Teacher cards**: Display photo, name, specialties, current classes
- **Multi-select**: Support for co-teaching arrangements
- **Quick actions**: "Invite new teacher" if not found in system
- **Assignment roles**: Lead teacher vs. assistant teacher designation

### Screen 2 State 2: New Teacher Invitation

- **Invitation form**: Email, name, specialties, temporary password option
- **Role assignment**: Automatic teacher role assignment
- **Email template**: Customizable invitation email with class details
- **Pending state**: Shows pending invitations with resend options

### Screen 3: Schedule Configuration

### Screen 3 State 1: Schedule Builder

- **Calendar interface**: Visual calendar for selecting class times
- **Recurring patterns**: Daily, weekly, custom patterns with exceptions
- **Time zone handling**: Automatic detection with manual override
- **Conflict detection**: Warning for teacher schedule conflicts
- **Multi-schedule support**: Different schedules for sub-courses

### Screen 3 State 2: Schedule Conflicts

- **Conflict visualization**: Red highlighting on conflicting time slots
- **Alternative suggestions**: System-suggested alternative times
- **Override options**: Admin ability to override conflicts with warnings
- **Teacher notification**: Automatic notification to affected teachers

### Screen 4: Google Sheets Integration

### Screen 4 State 1: Sheets Connection

- **URL input**: Google Sheets URL with validation
- **Permission check**: Automatic verification of sheet access
- **Template options**: Option to create from template or use existing
- **Data mapping**: Map sheet columns to system fields
- **Preview**: Live preview of sheet data before import

### Screen 4 State 2: Data Validation

- **Column mapping**: Visual interface for mapping spreadsheet columns
- **Data preview**: Table showing how data will be imported
- **Error detection**: Highlight invalid data with correction suggestions
- **Import options**: Full import vs. selective import of rows/columns

### Screen 5: Final Review & Creation

### Screen 5 State 1: Summary Review

- **Configuration summary**: Complete overview of all settings
- **Edit links**: Quick links to go back and modify any step
- **Teacher confirmation**: Show assigned teachers with confirmation status
- **Student preview**: If sheets connected, preview of student list
- **Create button**: Final creation with loading state

### Screen 5 State 2: Creation Success

- **Success animation**: Checkmark with celebration micro-animation
- **Channel link**: Direct link to newly created channel
- **Next steps**: Guided next steps for class setup
- **Invitation options**: Bulk invite students, share channel link

### Implementation Details

```jsx

javascript
// Class channel creation flow
const createClassChannel = async (channelData) => {
  const channelRef = doc(collection(db, 'channels'));
  await setDoc(channelRef, {
    type: 'class_channel',
    classConfig: {
      classType: channelData.classType,
      teachers: channelData.teachers,
      schedule: channelData.schedule,
      googleSheetsUrl: channelData.sheetsUrl,
      subCourses: channelData.subCourses
    },
    createdAt: serverTimestamp()
  });
};

```

---

## Feature 6: Real-Time Messaging with Comments

### Screen 1: Channel Message Interface

### Screen 1 State 1: Message List View

- **Message grouping**: Consecutive messages from same user grouped with timestamp on hover
- **User avatars**: Circular avatars on left side with online status indicators
- **Message content**:
    - Rich text support with basic formatting (bold, italic, links)
    - File attachments with thumbnails and download options
    - Emoji reactions with quick reaction picker
- **Timestamps**: Relative time (2m ago) with full timestamp on hover
- **Thread indicators**: Small thread icon for messages with comments

### Screen 1 State 2: Message Composition

- **Input area**: Rich text editor at bottom with formatting toolbar
- **File attachment**: Drag-drop zone with upload progress indicators
- **Emoji picker**: Accessible via button with search functionality
- **Mentions**: @ symbol triggers user search with autocomplete
- **Send options**: Enter to send (configurable), Shift+Enter for new line
- **Draft saving**: Auto-save draft messages locally

### Screen 1 State 3: Real-Time Updates

- **New message animation**: Smooth slide-in animation for new messages
- **Typing indicators**: "User is typing..." with animated dots
- **Online presence**: Real-time user status updates (online, away, offline)
- **Message delivery**: Sent/delivered/read status indicators
- **Auto-scroll**: Smart scrolling that respects user scroll position

### Screen 2: Comment Threading

### Screen 2 State 1: Thread View

- **Thread trigger**: Click on message or "Reply in thread" button
- **Side panel**: Right-side panel (400px) showing thread comments
- **Original message**: Highlighted original message at top of thread
- **Comment layout**: Simplified message layout for comments
- **Thread navigation**: Back to channel button, thread participant avatars

### Screen 2 State 2: Comment Composition

- **Simplified editor**: Streamlined composer for quick replies
- **Thread context**: Visual connection to original message
- **Notification settings**: Option to follow/unfollow thread
- **Thread summary**: Show number of replies and participants

### Screen 2 State 3: Nested Comments

- **Reply depth**: Support 1-2 levels of comment nesting
- **Visual hierarchy**: Indentation and connecting lines for nested replies
- **Collapse/expand**: Ability to collapse long comment threads
- **Jump to context**: Link back to original message context

### Screen 3: Message Interactions

### Screen 3 State 1: Reaction System

- **Quick reactions**: Hover reveals common emoji reactions
- **Custom reactions**: Full emoji picker with search
- **Reaction summary**: Display reaction counts with user lists on hover
- **Reaction animations**: Subtle scale animation when added/removed

### Screen 3 State 2: Message Actions

- **Action menu**: Three-dot menu with message-specific actions
- **Available actions**: Reply in thread, Copy link, Edit (own messages), Delete (own/admin)
- **Message editing**: Inline editing with edit history
- **Message deletion**: Soft delete with "Message deleted" placeholder

### Firebase Real-Time Implementation

```jsx

javascript
// Real-time message listening
useEffect(() => {
  const messagesRef = collection(db, `channels/${channelId}/messages`);
  const q = query(messagesRef, orderBy('createdAt', 'desc'), limit(50));

  const unsubscribe = onSnapshot(q, (snapshot) => {
    const newMessages = snapshot.docs.map(doc => ({
      id: doc.id,
      ...doc.data()
    }));
    setMessages(newMessages.reverse());
  });

  return unsubscribe;
}, [channelId]);

```

---

## Feature 7: Multi-Tab Channel Interface

### Screen 1: Tab Navigation System

### Screen 1 State 1: Default Tab Layout

- **Tab bar**: Horizontal tabs below channel header
- **Tab styling**: Active tab with bottom border, inactive tabs with hover states
- **Tab badges**: Unread counts or status indicators per tab
- **Default tabs**: Messages (always first), then type-specific tabs
- **Tab overflow**: Horizontal scroll for channels with many tabs
- **Mobile adaptation**: Tab carousel with swipe navigation

### Screen 1 State 2: Tab Switching Animation

- **Content transition**: Smooth fade/slide transition between tab content
- **Loading states**: Skeleton loaders for tab content that hasn't loaded
- **State preservation**: Previous tab state maintained when switching
- **URL routing**: Each tab has unique URL for direct linking

### Screen 2: Messages Tab

### Screen 2 State 1: Standard Messaging

- **Full messaging interface**: Complete messaging system as described in Feature 6
- **Channel-specific features**: Pinned messages, channel description
- **Member list**: Right sidebar with channel members (collapsible)
- **Channel settings**: Gear icon for channel configuration

### Screen 3: Tasks Tab

### Screen 3 State 1: Task List View

- **Task layout**: Kanban-style board with columns (To Do, In Progress, Completed)
- **Task cards**: Compact cards with title, assignee, due date, priority
- **Quick actions**: Add task button, filter/sort options
- **Assignment visualization**: Avatar chips for assigned members
- **Progress tracking**: Visual progress indicators for task completion

### Screen 3 State 2: Task Creation

- **Modal form**: Overlay modal with task creation form
- **Required fields**: Title, description, assignee(s), due date
- **Optional fields**: Priority level, tags, attachments
- **Assignment**: Multi-select for channel members
- **Template tasks**: Predefined task templates for common activities

### Screen 3 State 3: Task Detail View

- **Expandable cards**: Click task to expand inline detail view
- **Task actions**: Status change, edit, delete, comment
- **Activity timeline**: Comments and status changes with timestamps
- **Subtasks**: Optional subtask creation for complex tasks

### Screen 4: Wiki Tab

### Screen 4 State 1: Wiki Page List

- **Page hierarchy**: Tree structure for page organization
- **Search functionality**: Full-text search across all wiki pages
- **Recent pages**: Quick access to recently viewed/edited pages
- **Create page**: Prominent button for new page creation
- **Page templates**: Common templates (meeting notes, project docs, etc.)

### Screen 4 State 2: Wiki Page Editor

- **Markdown editor**: Split view with live preview
- **Collaborative editing**: Real-time collaborative editing with conflict resolution
- **Version history**: Access to previous versions with diff view
- **Page linking**: Auto-complete for internal page links
- **Media upload**: Drag-drop image upload with automatic optimization

### Screen 4 State 3: Wiki Page View

- **Rendered content**: Clean, readable page layout
- **Navigation**: Table of contents for long pages
- **Edit access**: Quick edit button for authorized users
- **Page info**: Last edited by, creation date, version info

### Screen 5: Bookmarks Tab

### Screen 5 State 1: Bookmark Collection

- **Grid layout**: Card-based layout for bookmarks with previews
- **Link previews**: Automatic generation of title, description, favicon
- **Categories**: Tag-based categorization with filter options
- **Search**: Search bookmarks by title, URL, or description
- **Bulk actions**: Multi-select for organizing bookmarks

### Screen 5 State 2: Add Bookmark

- **Quick add**: URL input with automatic metadata fetching
- **Manual entry**: Option to manually enter title and description
- **Categorization**: Tag assignment with existing tag suggestions
- **Privacy**: Personal vs. channel bookmark options

### Screen 6: Student Table Tab (Class Channels)

### Screen 6 State 1: Student Management Interface

- **Data table**: Sortable table with student information
- **Student fields**: Name, email, level, sub-course assignment, attendance
- **Bulk actions**: Import from sheets, export data, bulk assignments
- **Attendance tracking**: Quick attendance marking with visual indicators
- **Progress tracking**: Student progress through course levels

### Screen 6 State 2: Student Detail Modal

- **Student profile**: Complete student information and history
- **Attendance history**: Calendar view of attendance patterns
- **Assignment tracking**: Homework and test scores
- **Communication log**: Messages and notes about student
- **Parent/guardian info**: Contact information for minors

### Tab State Management

```jsx

javascript
// Tab routing and state preservation
const ChannelTabs = ({ channelId, channelType }) => {
  const { tabId } = useParams();
  const [tabStates, setTabStates] = useState({});

  const tabs = getTabsForChannelType(channelType);

  return (
    <TabContainer>
      <TabNavigation tabs={tabs} activeTab={tabId} />
      <TabContent>
        <Routes>
          {tabs.map(tab => (
            <Route
              key={tab.id}
              path={tab.id}
              element={<TabComponent tab={tab} channelId={channelId} />}
            />
          ))}
        </Routes>
      </TabContent>
    </TabContainer>
  );
};

```

---

## Feature 8: CRM Customer Management

### Screen 1: Customer Dashboard

### Screen 1 State 1: Customer List View

- **Layout**: Table view with customer cards option toggle
- **Columns**: Name, Email, Location, Service Type, Status, Last Contact
- **Filtering**: Multi-filter sidebar (location, service type, status)
- **Search**: Global search across all customer fields
- **Sorting**: Sortable columns with save preferences
- **Pagination**: Load more / infinite scroll for large datasets
- **Quick actions**: Call, email, message buttons per row

### Screen 1 State 2: Advanced Filtering

- **Filter panel**: Collapsible left sidebar with filter categories
- **Location filters**: Country (Germany/Vietnam), City, Online/Offline
- **Service filters**: Language class, Visa service, Other
- **Status filters**: Active, Potential, Inactive, Completed
- **Date ranges**: Registration date, last contact, course dates
- **Custom filters**: Save custom filter combinations

### Screen 1 State 3: Bulk Operations

- **Multi-select**: Checkbox selection with bulk action bar
- **Bulk actions**: Export, send email, assign to staff, update status
- **Bulk editing**: Mass update of customer fields
- **Progress tracking**: Progress bar for long-running bulk operations

### Screen 2: Customer Creation/Editing

### Screen 2 State 1: Customer Information Form

- **Multi-step form**: Personal Info → Location → Services → Visa Info
- **Personal information**:
    - Full name (first/last with proper international name support)
    - Email (with validation and duplicate checking)
    - Phone (international format with country code)
    - Date of birth (date picker with age calculation)
- **Photo upload**: Optional customer photo with crop functionality
- **Validation**: Real-time validation with helpful error messages

### Screen 2 State 2: Location & Service Details

- **Location section**:
    - Country dropdown (Germany/Vietnam)
    - City/State field (with autocomplete for major cities)
    - Service delivery: Online/Offline radio selection
    - Full address (for offline services)
- **Service interests**:
    - Service type: Language class/Visa service/Other
    - Language interests: Multi-select (German, English, Vietnamese)
    - Current level: A1-C2 proficiency scale
    - Target level: Goal proficiency level
    - Preferred learning style: Group/Individual/Mixed

### Screen 2 State 3: Visa Information (Conditional)

- **Visa status tracking**: Pending/Approved/Denied/Not applicable
- **Visa type**: Student/Work/Family reunion/Tourist
- **Application details**: Application date, expected decision date
- **Document tracking**: Required documents checklist
- **Expiry management**: Visa expiry date with renewal reminders

### Screen 3: Customer Profile Detail

### Screen 3 State 1: Comprehensive Profile View

- **Header section**: Customer photo, name, status badge, quick actions
- **Information tabs**: Overview, Course History, Communications, Documents
- **Contact information**: All contact details with click-to-call/email
- **Status timeline**: Visual timeline of customer journey stages
- **Quick edit**: Inline editing for frequently updated fields

### Screen 3 State 2: Course History Tab

- **Course timeline**: Chronological list of all courses taken
- **Course details**: Course name, level, dates, completion status
- **Progress tracking**: Visual progress through language levels
- **Certificates**: Digital certificates and completion records
- **Payment history**: Link to bookkeeping records

### Screen 3 State 3: Communication Log

- **Activity feed**: All interactions (calls, emails, meetings, messages)
- **Communication type**: Icons for different communication channels
- **Notes section**: Staff notes and customer interaction summaries
- **Follow-up reminders**: Scheduled follow-up tasks and alerts
- **Email integration**: Direct email sending from customer profile

### Screen 4: Customer Import/Export

### Screen 4 State 1: Data Import Wizard

- **File upload**: Drag-drop CSV/Excel file upload
- **Column mapping**: Visual interface to map file columns to customer fields
- **Data preview**: Table preview of import data with error highlighting
- **Validation results**: List of data issues with correction suggestions
- **Import options**: Create new vs. update existing customers

### Screen 4 State 2: Export Configuration

- **Field selection**: Checkbox list of customer fields to export
- **Filter application**: Apply current view filters to export
- **Format options**: CSV, Excel, PDF report formats
- **Privacy compliance**: GDPR-compliant export with consent tracking
- **Scheduled exports**: Set up recurring export schedules

### CRM Firestore Schema

```jsx

javascript
// Customer document structure
{
  personalInfo: {
    firstName: "string",
    lastName: "string",
    email: "string",
    phone: "string",
    dateOfBirth: timestamp,
    profilePhoto: "storage/path"
  },
  location: {
    country: "Germany" | "Vietnam",
    city: "string",
    serviceType: "online" | "offline",
    address: "string"
  },
  services: {
    type: "language_class" | "visa_service" | "other",
    interests: ["German", "English"],
    currentLevel: "A1",
    targetLevel: "B2",
    preferredStyle: "group" | "individual" | "mixed"
  },
  visaInfo: {
    status: "pending" | "approved" | "denied" | "not_applicable",
    type: "student" | "work" | "family" | "tourist",
    applicationDate: timestamp,
    expiryDate: timestamp
  },
  status: "active" | "potential" | "inactive" | "completed",
  courseHistory: [],
  communicationLog: [],
  createdAt: timestamp,
  updatedAt: timestamp,
  createdBy: "userId"
}

```

---

## Feature 9: Simple Bookkeeping System

### Screen 1: Financial Dashboard

### Screen 1 State 1: Overview Dashboard

- **Key metrics cards**: Total revenue, monthly revenue, pending payments, currency breakdown
- **Revenue charts**: Monthly/yearly revenue trends with currency switching
- **Recent transactions**: Latest 10 transactions with quick action buttons
- **Currency display**: Primary currency (EUR) with VND conversion rates
- **Quick actions**: Record payment, issue refund, export data
- **Period filters**: This month, quarter, year, custom date range

### Screen 1 State 2: Multi-Currency View

- **Currency toggle**: Switch between EUR and VND views
- **Exchange rate display**: Current rates with last updated timestamp
- **Dual currency cards**: Metrics shown in both currencies simultaneously
- **Rate history**: Historical exchange rate chart
- **Conversion warnings**: Alerts for significant rate changes

### Screen 2: Payment Recording

### Screen 2 State 1: Payment Entry Form

- **Student selection**: Search and select from CRM customers
- **Course linking**: Dropdown of student's current/past courses
- **Amount entry**:
    - Currency selector (EUR/VND)
    - Amount input with real-time conversion display
    - Payment type: Full payment/Partial payment toggle
- **Payment details**:
    - Payment method: Cash/Bank transfer/PayPal/Other
    - Transaction date (defaults to today)
    - Description/notes field
- **Partial payment handling**: If partial, show total owed and remaining balance

### Screen 2 State 2: Partial Payment Configuration (continued)

- **Payment schedule**: Visual timeline of payment schedule
- **Amount calculation**: Automatic calculation of remaining balance
- **Payment plan**: Option to set up future payment reminders
- **Payment history**: Show previous payments for this course
- **Balance tracking**: Visual progress bar showing payment completion percentage

### Screen 2 State 3: Payment Confirmation

- **Review summary**: Complete payment details with currency conversion
- **Receipt preview**: Preview of receipt that will be generated
- **Notification options**: Email receipt to student, notify admin
- **Save and new**: Option to save and immediately add another payment
- **Integration sync**: Automatic sync with CRM customer record

### Screen 3: Transaction Management

### Screen 3 State 1: Transaction List

- **Table layout**: Date, Student, Course, Amount, Currency, Method, Status
- **Advanced filtering**: Date range, student, course, payment method, amount range
- **Search functionality**: Global search across all transaction fields
- **Export options**: CSV, PDF reports with custom date ranges
- **Bulk operations**: Select multiple transactions for bulk actions

### Screen 3 State 2: Transaction Detail Modal

- **Complete transaction info**: All payment details in expanded view
- **Related records**: Links to customer profile and course information
- **Receipt actions**: View, download, resend receipt
- **Transaction history**: Edit history and related transactions
- **Refund/adjustment**: Options to process refunds or adjustments

### Screen 3 State 3: Refund Processing

- **Refund wizard**: Step-by-step refund process
- **Refund amount**: Partial or full refund with reason selection
- **Refund method**: Same as original payment or alternative method
- **Documentation**: Required reason and supporting documentation
- **Approval workflow**: Admin approval for refunds over threshold

### Screen 4: Financial Reporting

### Screen 4 State 1: Revenue Reports

- **Report types**: Monthly revenue, yearly overview, student payment summary
- **Chart visualizations**: Line charts for trends, pie charts for breakdowns
- **Comparison views**: Year-over-year, month-over-month comparisons
- **Currency analysis**: Revenue breakdown by currency
- **Export capabilities**: PDF reports, Excel spreadsheets

### Screen 4 State 2: Student Payment Reports

- **Individual student reports**: Complete payment history per student
- **Outstanding balances**: Students with pending payments
- **Payment patterns**: Analysis of payment timing and methods
- **Course profitability**: Revenue analysis per course type
- **Retention metrics**: Student retention based on payment patterns

### Screen 5: Bookkeeping Settings

### Screen 5 State 1: Currency Configuration

- **Exchange rate management**: Manual rate entry or automatic API updates
- **Rate history**: Historical rate tracking with change notifications
- **Default currency**: Set primary currency for reporting
- **Rate alerts**: Notifications for significant exchange rate changes
- **API integration**: Connection to currency exchange rate services

### Screen 5 State 2: Receipt Templates

- **Template customization**: Customize receipt appearance and content
- **Branding options**: Logo upload, color scheme, contact information
- **Language support**: Multi-language receipt templates
- **Legal compliance**: Tax information and legal disclaimers
- **Template preview**: Live preview of receipt design

### Bookkeeping Firestore Schema

```jsx

javascript
// Payment document structure
{
  studentId: "customerId_from_crm",
  courseId: "courseId_from_class_channel",
  amount: {
    value: 150,
    currency: "EUR",
    convertedValue: 1650000,// in VND
    exchangeRate: 11000,
    convertedAt: timestamp
  },
  type: "payment" | "refund" | "adjustment",
  method: "cash" | "bank_transfer" | "paypal" | "other",
  status: "pending" | "completed" | "failed",
  isPartialPayment: true,
  totalOwed: 300,
  remainingBalance: 150,
  description: "A1.1 Course - Payment 1 of 2",
  paymentPlan: {
    installments: 2,
    currentInstallment: 1,
    nextDueDate: timestamp
  },
  transactionDate: timestamp,
  receiptSent: true,
  createdBy: "userId",
  createdAt: timestamp,
  metadata: {
    ipAddress: "string",
    userAgent: "string"
  }
}

```

---

## Feature 10: Google Sheets Integration

### Screen 1: Sheets Connection Management

### Screen 1 State 1: Integration Dashboard

- **Connected sheets**: List of currently connected Google Sheets
- **Connection status**: Green/yellow/red indicators for sync status
- **Last sync info**: Timestamp and success/failure status of last sync
- **Quick actions**: Manual sync, disconnect, view sync logs
- **Add connection**: Prominent button to connect new sheet
- **Sync frequency**: Display current sync schedule (hourly, daily, manual)

### Screen 1 State 2: New Sheet Connection

- **Google OAuth**: Secure Google authentication flow
- **Sheet selection**: Browse and select from user's Google Sheets
- **Permission verification**: Check sheet access and editing permissions
- **Sheet preview**: Display first few rows to verify correct sheet
- **Connection naming**: Custom name for internal reference

### Screen 1 State 3: Permission Issues

- **Error display**: Clear explanation of permission problems
- **Resolution steps**: Step-by-step guide to fix permission issues
- **Support contact**: Link to help documentation or support
- **Retry mechanism**: Easy retry after permission fixes

### Screen 2: Data Mapping Configuration

### Screen 2 State 1: Column Mapping Interface

- **Side-by-side view**: Google Sheets columns on left, system fields on right
- **Drag-and-drop mapping**: Visual connection lines between columns and fields
- **Field types**: Clear indication of required vs. optional fields
- **Data preview**: Sample data from sheets with mapped field preview
- **Validation rules**: Display validation requirements for each field
- **Mapping templates**: Save and reuse mapping configurations

### Screen 2 State 2: Data Validation

- **Validation results**: Color-coded indicators for data quality
- **Error details**: Specific errors with row numbers and suggested fixes
- **Data transformation**: Options to clean/transform data during import
- **Skip options**: Choose to skip invalid rows or halt import
- **Preview import**: See exactly what data will be imported

### Screen 2 State 3: Sync Direction Setup

- **Bidirectional options**: Choose sync direction (import only, export only, bidirectional)
- **Conflict resolution**: Rules for handling data conflicts
- **Update strategies**: Append new, update existing, or replace all
- **Backup options**: Automatic backup before sync operations

### Screen 3: Sync Monitoring

### Screen 3 State 1: Sync Status Dashboard

- **Real-time sync status**: Progress bars for active sync operations
- **Sync history**: List of recent sync operations with outcomes
- **Error logs**: Detailed error messages with timestamps
- **Data changes**: Summary of records added, updated, deleted
- **Performance metrics**: Sync duration and throughput statistics

### Screen 3 State 2: Conflict Resolution

- **Conflict detection**: Highlight records with conflicts
- **Resolution options**: Choose system data, sheet data, or manual merge
- **Bulk resolution**: Apply resolution rules to multiple conflicts
- **Conflict preview**: Show before/after data for each conflict
- **Resolution history**: Track how conflicts were resolved

### Screen 3 State 3: Manual Sync Trigger

- **Sync confirmation**: Confirm manual sync with data impact summary
- **Partial sync**: Option to sync specific data ranges or types
- **Progress tracking**: Real-time progress with cancellation option
- **Success summary**: Report of sync results and any issues

### Screen 4: Attendance Integration

### Screen 4 State 1: Attendance Sheet Setup

- **Sheet template**: Provide template for attendance tracking
- **Student roster sync**: Automatic sync of enrolled students to sheet
- **Date column setup**: Configure date columns for attendance marking
- **Attendance codes**: Define codes for present, absent, late, excused
- **Teacher access**: Configure sheet sharing with teachers

### Screen 4 State 2: Attendance Data Sync

- **Attendance import**: Regular import of attendance data from sheets
- **Validation rules**: Check for valid dates and attendance codes
- **Missing data**: Handle missing or incomplete attendance records
- **Notification system**: Alert for attendance discrepancies
- **Report generation**: Attendance reports based on imported data

### Screen 5: Advanced Sync Settings

### Screen 5 State 1: Sync Schedule Configuration

- **Frequency options**: Hourly, daily, weekly, or manual sync
- **Time scheduling**: Specific times for scheduled syncs
- **Timezone handling**: Proper timezone management for scheduled syncs
- **Retry settings**: Automatic retry on failure with backoff
- **Notification preferences**: Email notifications for sync events

### Screen 5 State 2: Data Transformation Rules

- **Field transformations**: Rules for cleaning and formatting data
- **Calculated fields**: Create system fields from sheet formulas
- **Data validation**: Custom validation rules for imported data
- **Default values**: Set defaults for missing or invalid data
- **Data archiving**: Rules for handling old or deleted records

### Google Sheets API Integration

```jsx

javascript
// Sheets sync implementation
const syncGoogleSheet = async (connectionId) => {
  try {
// Get sheet data
    const response = await gapi.client.sheets.spreadsheets.values.get({
      spreadsheetId: sheetId,
      range: 'A1:Z1000'
    });

// Process and validate data
    const processedData = processSheetData(response.result.values);

// Sync with Firestore
    const batch = writeBatch(db);
    processedData.forEach(record => {
      const docRef = doc(db, 'students', record.id);
      batch.set(docRef, record, { merge: true });
    });

    await batch.commit();

// Update sync status
    await updateSyncStatus(connectionId, 'success');

  } catch (error) {
    await updateSyncStatus(connectionId, 'error', error.message);
  }
};

```

---

## Feature 11: File Sharing System

### Screen 1: File Upload Interface

### Screen 1 State 1: Drag-and-Drop Zone

- **Upload area**: Large dotted border zone with upload icon and text
- **Visual feedback**: Hover state changes color and shows "Drop files here"
- **File browser**: "Click to browse" option for traditional file selection
- **Multiple file support**: Ability to select and upload multiple files simultaneously
- **Progress indicators**: Individual progress bars for each uploading file
- **File validation**: Real-time validation of file type and size limits

### Screen 1 State 2: Upload Progress

- **Progress visualization**: Circular progress indicators with percentage
- **Upload queue**: List of files in upload queue with individual status
- **Speed indicator**: Upload speed and estimated time remaining
- **Cancel option**: Ability to cancel individual or all uploads
- **Error handling**: Clear error messages for failed uploads
- **Success confirmation**: Check marks and success messages for completed uploads

### Screen 1 State 3: File Type Restrictions

- **Allowed types**: Clear indication of supported file formats
- **Size limits**: Display maximum file size (5MB) with current file size
- **Rejection feedback**: Specific error messages for rejected files
- **Format conversion**: Optional conversion options for unsupported formats
- **Batch validation**: Validate entire selection before starting upload

### Screen 2: File Management

### Screen 2 State 1: File List View

- **File grid**: Thumbnail view for images, icon view for other file types
- **File information**: Name, size, upload date, uploaded by user
- **Search functionality**: Search files by name, type, or uploader
- **Filter options**: Filter by file type, date range, or uploader
- **Sorting options**: Sort by name, date, size, or file type
- **Selection mode**: Multi-select with bulk action options

### Screen 2 State 2: File Preview

- **Image preview**: Full-size image preview with zoom and pan
- **Document preview**: PDF and document preview when possible
- **Video/audio players**: Embedded players for media files
- **File details**: Metadata information including dimensions, duration
- **Download options**: Direct download or copy link options
- **Sharing controls**: Link sharing with permission settings

### Screen 2 State 3: File Organization

- **Folder structure**: Create folders for file organization
- **Move operations**: Drag-and-drop file moving between folders
- **Bulk operations**: Move, delete, or share multiple files
- **Favorites**: Mark frequently accessed files as favorites
- **Recent files**: Quick access to recently uploaded or accessed files

### Screen 3: File Sharing and Permissions

### Screen 3 State 1: Share Link Generation

- **Link creation**: Generate shareable links with expiration options
- **Permission levels**: View only, download, or full access
- **Password protection**: Optional password protection for sensitive files
- **Expiration settings**: Set link expiration date and time
- **Usage tracking**: Track link access and download statistics
- **Revoke access**: Ability to disable shared links

### Screen 3 State 2: Channel File Access

- **Channel context**: Files automatically shared with channel members
- **Role-based access**: Different permissions based on user roles
- **File visibility**: Public channel files vs. private file uploads
- **Access history**: Log of who accessed or downloaded files
- **Notification settings**: Notify when files are shared or accessed

### Screen 3 State 3: External Sharing

- **Public links**: Generate public links for external sharing
- **Embed options**: Embed codes for images or documents
- **Social sharing**: Quick share to social media platforms
- **Email sharing**: Direct email sharing with file attachments
- **Collaboration**: Allow external users to upload to shared folders

### Screen 4: File Search and Discovery

### Screen 4 State 1: Advanced Search

- **Global file search**: Search across all accessible files
- **Search filters**: File type, size range, date range, uploader
- **Content search**: OCR text search for images and PDFs
- **Tag-based search**: Files tagged with custom keywords
- **Saved searches**: Save frequently used search queries
- **Search suggestions**: Auto-complete and search history

### Screen 4 State 2: File Analytics

- **Usage statistics**: Most downloaded, recently accessed files
- **Storage analytics**: Storage usage by file type and user
- **Popular files**: Files with highest view/download counts
- **Duplicate detection**: Identify and manage duplicate files
- **Storage optimization**: Suggestions for storage cleanup

### Screen 5: File Security and Compliance

### Screen 5 State 1: Security Features

- **Virus scanning**: Automatic malware scanning on upload
- **Encryption**: File encryption at rest and in transit
- **Access logs**: Detailed logs of all file access and operations
- **Backup systems**: Automatic file backup and versioning
- **Compliance tools**: GDPR compliance features for file handling

### Screen 5 State 2: File Retention

- **Retention policies**: Automatic deletion of old files
- **Archive systems**: Move old files to archive storage
- **Legal holds**: Prevent deletion of files under legal hold
- **Data export**: Export file metadata and access logs
- **Recovery options**: File recovery from accidental deletion

### Firebase Storage Implementation

```jsx

javascript
// File upload with progress tracking
const uploadFile = async (file, channelId) => {
  const storageRef = ref(storage, `channels/${channelId}/${file.name}`);
  const uploadTask = uploadBytesResumable(storageRef, file);

  return new Promise((resolve, reject) => {
    uploadTask.on('state_changed',
      (snapshot) => {
// Progress tracking
        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        onProgress(progress);
      },
      (error) => {
// Handle error
        reject(error);
      },
      async () => {
// Upload completed
        const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);

// Save file metadata to Firestore
        const fileDoc = await addDoc(collection(db, 'files'), {
          name: file.name,
          size: file.size,
          type: file.type,
          downloadURL,
          channelId,
          uploadedBy: user.uid,
          uploadedAt: serverTimestamp()
        });

        resolve({ id: fileDoc.id, downloadURL });
      }
    );
  });
};

```

---

## Cross-Feature Integration Points

### Authentication Flow Integration

- **Role-based feature access**: Different features visible based on user roles
- **Permission inheritance**: Channel permissions apply to all tabs and features
- **Session management**: Consistent authentication across all features

### Real-time Data Synchronization

- **Cross-feature notifications**: File uploads notify in messaging, CRM updates reflect in bookkeeping
- **Consistent state management**: User presence, online status across all features
- **Data consistency**: Ensure customer data consistency between CRM and bookkeeping

### Mobile Responsiveness

- **Adaptive layouts**: All features work on mobile with touch-optimized interfaces
- **Progressive disclosure**: Complex features simplified for mobile use
- **Offline capabilities**: Critical features work offline with sync on reconnection

### Performance Optimization

- **Lazy loading**: Features load only when accessed
- **Data pagination**: Large datasets paginated for performance
- **Caching strategies**: Intelligent caching of frequently accessed data
- **Bundle splitting**: Code splitting for faster initial load times